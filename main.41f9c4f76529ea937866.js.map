{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["refs","days","document","querySelector","hours","mins","secs","pad","value","String","padStart","start","targetDate","Date","setInterval","currentDate","now","time","Math","floor","textContent","updateClockFace","getTime"],"mappings":"kHAAA,4B,mBCiBA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAyC/B,SAASI,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAvCrB,CACZC,QACE,MAAMC,EAAa,IAAIC,KAAK,gBAE5BC,YAAY,KACV,MAAMC,EAAcF,KAAKG,OAiB/B,SAAyBC,GACvB,MAAMhB,EAAOiB,KAAKC,MAAMF,EAAO,OAEzBb,EAAQG,EACZW,KAAKC,MAAOF,EAAO,MAAR,OAGPZ,EAAOE,EAAIW,KAAKC,MAAOF,EAAO,KAAR,MAEtBX,EAAOC,EAAIW,KAAKC,MAAOF,EAAO,IAAe,MAEnDjB,EAAKC,KAAKmB,YAAe,GAAEnB,EAC3BD,EAAKI,MAAMgB,YAAe,GAAEhB,EAC5BJ,EAAKK,KAAKe,YAAe,GAAEf,EAC3BL,EAAKM,KAAKc,YAAe,GAAEd,EA3BvBe,CAFcT,EAAWU,UAAYP,IAGpC,QAIDJ,U","file":"main.41f9c4f76529ea937866.js","sourcesContent":["import './styles.css';\n\nimport './js/timer'\n","/*\n *\n * Создай плагин настраиваемого таймера, который ведет обратный отсчет до\n * предварительно определенной даты. Такой плагин может использоваться\n * в блогах и интернет-магазинах, страницах регистрации событий, во время\n * технического обслуживания и т. д.\n *\n *\n * Плагин ожидает следующую HTML-разметку и показывает четыре цифры:\n *  дни, часы, минуты и секунды в формате XX:XX:XX:XX.\n *  Количество дней может состоять из более чем двух цифр.\n */\n\n/*\n * Плагин это класс CountdownTimer, экземпляр которого создает новый таймер с настройками.\n */\n\nconst refs = {\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n};\n\nconst timer = {\n  start() {\n    const targetDate = new Date('Jan 20, 2021');\n\n    setInterval(() => {\n      const currentDate = Date.now();\n\n      const delta = targetDate.getTime() - currentDate;\n\n      updateClockFace(delta);\n    }, 1000);\n  },\n};\n\ntimer.start();\n\n/*\n *\n * Для подсчета значений используй следующие готовые формулы,\n * где time - разница между targetDate и текущей датой.\n */\n\nfunction updateClockFace(time) {\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n  );\n\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  refs.days.textContent = `${days}`;\n  refs.hours.textContent = `${hours}`;\n  refs.mins.textContent = `${mins}`;\n  refs.secs.textContent = `${secs}`;\n}\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"sourceRoot":""}